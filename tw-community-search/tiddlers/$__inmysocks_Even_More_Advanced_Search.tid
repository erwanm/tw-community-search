title: $:/inmysocks/Even More Advanced Search
created: 20141224194826110
done: unused
modified: 20141224233218366
search: Da
tags: inmysocks  Tools
source-wiki-id: inmysocks
source-tiddler-title-as-text: Even More Advanced Search
source-tiddler-title-as-link: Even%20More%20Advanced%20Search

\define thisSearchMacro()
<ul>
<$list filter="[$(thisIncludeSystem)$regexp:$(thisField)$[(?i)$(thisSearch)$]]">
<li><$link to=<<currentTiddler>>><<currentTiddler>></$link></li>
</$list>
</ul>
\end

\define thisFieldSelect()
<$select tiddler='More Advanced Search Filter Data' field='search_field' default='title'>
<$list filter='[fields[]sort[title]regexp:[(?i)$(thisSearch)$]]'>
<option value=<<currentTiddler>>><$view field='title'/></option>
</$list>
</$select>
\end

\define thisSearchListMacro()
<tr><td><<currentTiddler>></td><td><$select tiddler='$:/data/search' index=<<currentTiddler>>><option>AND</option><option>OR</option><option>NOT</option></$select></td><td><$button set='$:/data/search##$(currentTiddler)$'>Remove</$button></td></tr>
\end

''Number 2 below actually works, and is on the dashboard''

I am going to try to make a search interface that allows you to easily input tags to use while searching and a regexp search on top of that. We will see how it goes.

*Generate a list of tags that can be selected, I think having a dropdown menu that lets you add tags to a list would be good. 
*In that list have check boxes to toggle that tag as part of the search
*Using the result of that use a regexp search
*This is going to be an interface to build a filter expression that is used with the list filter
*I should let the user specify AND/OR/NOT relations also

!Step 1 - Build a list of tags. This one may not work.
Use a select widget to pick them, the selected tags will be put into an automatically generated table, in the table there should be radio buttons to pick the AND/OR/NOT/unused state (or a select widget? that may be better)

I should use a data tiddler to maintain this list, the indicies will be the tag names, the values stored with be the AND/OR/NOT/unused status of the tag.

```
\define thisSearchListMacro()
<tr><td><<currentTiddler>></td><td><$select tiddler='$:/data/search' index=<<currentTiddler>>><option>AND</option><option>OR</option><option>NOT</option></$select></td><td><$button set='$:/data/search##$(currentTiddler)$'>Remove</$button></td></tr>
\end

\define thisAndMacro(tagName)
tag[$tagName$]
\end

\define thisOrMacro(tagName)
][tag[$tagName$]
\end

<$select tiddler='More Advanced Filter Data' field='current_tag'>
<$list filter='[tags[]sort[title]]'>
<option value=<<currentTiddler>>><$view field='title'/></option>
</$list>
</$select>
<$button>Add tag
<$action-setfield $tiddler='$:/data/search' $index={{More Advanced Filter Data!!current_tag}} $value=AND/>
</$button>


<table>
<tr><td>Tag</td><td>Operation</td></tr>
<$list filter='[[$:/data/search]indexes[]]'>
<<thisSearchListMacro>>
</$list>
</table>
```

<$select tiddler='More Advanced Filter Data' field='current_tag'>
<$list filter='[tags[]sort[title]]'>
<option value=<<currentTiddler>>><$view field='title'/></option>
</$list>
</$select>
<$button>Add tag
<$action-setfield $tiddler='$:/data/search' $index={{More Advanced Filter Data!!current_tag}} $value=AND/>
</$button>


<table>
<tr><td>Tag</td><td>Operation</td></tr>
<$list filter='[[$:/data/search]indexes[]]'>
<<thisSearchListMacro>>
</$list>
</table>

!Step 2 - regexp
This is going to the pretty much the same as in the dictionary search function. You pick the field you want to search, the `Narrow List` option is a regexp search on the list of fields, so it narrows down the list for the select widget so you can find the field you want to search. Then the `Search` is the search string for the field selected.

```
\define thisSearchMacro()
<ul>
<$list filter="[regexp:$(thisField)$[(?i)$(thisSearch)$]]">
<li><$link to=<<currentTiddler>>><<currentTiddler>></$link></li>
</$list>
</ul>
\end

\define thisFieldSelect()
<$select tiddler='More Advanced Search Filter Data' field='search_field' default='title'>
<$list filter='[fields[]sort[title]regexp:[(?i)$(thisSearch)$]]'>
<option value=<<currentTiddler>>><$view field='title'/></option>
</$list>
</$select>
\end

Field to search: <$set name=thisSearch value={{More Advanced Search Filter Data!!narrow_field_select}}>
<<thisFieldSelect>>
</$set>
<$edit-text tiddler='More Advanced Search Filter Data' field='narrow_field_select' placeholder='Narrow Field List'/> 
<br>
Search: <$edit-text tiddler='More Advanced Search Filter Data' field='search_string' placeholder='Search String'/> <$checkbox tiddler='More Advanced Search Filter Data' field='include_system_tiddlers' checked='' unchecked='!is[system]'> Include System Tiddlers</$checkbox>

<$set name='thisIncludeSystem' value={{More Advanced Search Filter Data!!include_system_tiddlers}}>
<$set name='thisSearch' value={{More Advanced Search Filter Data!!search_string}}>
<$set name='thisField' value={{More Advanced Search Filter Data!!search_field}}>
<<thisSearchMacro>>
</$set>
</$set>
</$set>
```
Field to search: <$set name=thisSearch value={{More Advanced Search Filter Data!!narrow_field_select}}>
<<thisFieldSelect>>
</$set>
<$edit-text tiddler='More Advanced Search Filter Data' field='narrow_field_select' placeholder='Narrow Field List'/> 
<br>
Search: <$edit-text tiddler='More Advanced Search Filter Data' field='search_string' placeholder='Search String'/> <$checkbox tiddler='More Advanced Search Filter Data' field='include_system_tiddlers' checked='' unchecked='!is[system]'> Include System Tiddlers</$checkbox>

<$set name='thisIncludeSystem' value={{More Advanced Search Filter Data!!include_system_tiddlers}}>
<$set name='thisSearch' value={{More Advanced Search Filter Data!!search_string}}>
<$set name='thisField' value={{More Advanced Search Filter Data!!search_field}}>
<<thisSearchMacro>>
</$set>
</$set>
</$set>

!Step 3 - build the filter expression
This is going to be done using a macro. The problem I am seeing is that while I can have fewer than the maximum number of inputs to the macro I don't think I can have a macro that can take an arbitrary number. So start with allowing 5 or fewer tags in the search and worry about the rest later.

the filter macro and call should be something like this

```
\define thisMakeFilter()
[$(tag1)$$tag2)$$(tag3)$$(tag4)$$(tag5)$regexp:$(fieldtosearch)$$(regexpsearch)$]
\end

<$set name=tag1 value={{!!tag1_value}}>
<$set name=tag2 value={{!!tag2_value}}>
<$set name=tag3 value={{!!tag3_value}}>
<$set name=tag4 value={{!!tag4_value}}>
<$set name=tag5 value={{!!tag5_value}}>
<$set name=fieldtosearch value={{!!field_to_search}}>
<$set name=regexpsearch value={{!!regexp_search}}>

<$list filter=<<thisMakeFilter>>>

</$list>

</$set>
</$set>
</$set>
</$set>
</$set>
</$set>
</$set>
```