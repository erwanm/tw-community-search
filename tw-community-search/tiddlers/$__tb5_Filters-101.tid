title: $:/tb5/Filters-101
created: 20151127110400596
creator: Tobias Beer
modified: 20151127181931267
revision: 0
summary: the very basics for working with filters
type: text/vnd.tiddlywiki
original-tags: Filters Solutions
source-wiki-id: tb5
source-tiddler-title-as-text: Filters-101
source-tiddler-title-as-link: Filters-101

Once you get the gist, <<x Filters filters>> turn out to work rather straight forward. Looking for a particular filter solution? Take a look at {{filters!!url}}.

Take a look a this example:

```
{{{ [tags[]prefix[$]tagging[]] }}}
```

When you work with filter operators, try to think in steps:

# What is the ''input''?
# What is the ''output''?

...of all <<x "Filter Operators" "filter operators">>, perhaps joined into <<x "Filter Run" "filter runs">>. This makes it much clearer how we get from A to B.

Let's demystify the above example where 3 ''filter steps'' are joined into a single ''filter run'' altogether yielding the entire ''filter expression'' (or "filter string") used for the basic [[list transclusion|transclusion]].

# `tags[]`<br>» ''input'': <<x "all Operator" "[all[]]">> — the default, assumed if nothing else is specified<br>» ''output'': all tags
# `prefix[?!?]`<br>» ''input'': output of 1<br>» ''output'': all those tags with prefix `$`
# `tagging[]`<br>» ''input'': output of 2<br>» ''output'': all those titles that have tags with prefix `$`

The above example shows a filter being a single <<x "Filter Steps" "filter run">>.
You can combine multiple filter runs using different logic modes:

; OR logic
: `[tag[foo]] [tag[bar]]`
: returns any tiddler either tagged ''`foo` OR'' tagged ''`bar`''
; AND logic
: `[tag[foo]] +[tag[bar]]`
: using `+` returns any tiddler tagged ''`foo` AND'' tagged ''`bar`''
:: same as `[tag[foo]tag[bar]]` which is, however, a single ''filter run''
; NOT logic
: `[tag[foo]] -[tag[bar]]`
: using `-` returns any tiddler tagged ''`foo`'' but ''NOT'' tagged ''`bar`''

To learn more about all that, see:

; <<x "Filters">> — jump-start your journey to filers
: <<x "Introduction to filter notation">> – a step-by-step walk-through
: <<x "Filter Operators">> – available methods of filtering
; <<x "Filter Syntax">> — all the technical details
: <<x "Filter Expression">> — being the entire filter string
: <<x "Filter Run">> — a chain of joined steps
: <<x "Filter Step">> — a single filter operation and its parameters
: <<x "Filter Parameter">> — specifying parameters for a filter operator 
: <<x "Filter Whitespace">> — making things readable

And here's how you can, based on the above knowledge, show all system tags and tiddlers that have them:

<$macrocall $name=` text="""<$list filter="[tags[]prefix[$:/tags/]]">
<h2><$link><$view field="title"/></$link></h2>
<<list-links "[all[current]tagging[]]">>
</$list>"""/>
