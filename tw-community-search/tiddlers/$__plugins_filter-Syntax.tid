title: $:/plugins/filter-Syntax
created: 20151221061040268
creator: Tobias Beer
modified: 20151222142757761
revision: 0
type: text/vnd.tiddlywiki
original-tags: 
source-wiki-id: plugins
source-tiddler-title-as-text: filter-Syntax
source-tiddler-title-as-link: filter-Syntax

For the ''filter[]'' operator `filter:<suffix>[<operand>]` you can specify...

; operand:
: a ''subfilter'' to be evaluated, usually passed as a <<x Variables variable>> or <<x TextReference text-reference>>, e.g.:<br>`[filter<my-variable>]` or `[filter{title!!field}]`
; suffix
: optional, any of...
: `var:<variable-name>`
:: sets the variable to each input title in turn when evaluating the ''subfilter''
::: if not specified, defaults to ''inputTitle''
: `input`
:: use this suffix to have the ''subfilter'' evaluated against all input titles as its source
::: by default, the ''subfilter'' is evaluated only against each input title in turn
: `$`
:: returns all those input titles for which the ''subfilter'' returned output titles in turn
: `$all`
:: returns all input titles, should the ''subfilter'' return output titles for any of them

!!  Syntax Examples

; `[filter:input<subfilter>]`
: evaluates the ''subfilter'' against each input title in turn
:: sets the __default__ variable `inputTitle` to each input title in turn
:: using __all input titles__ as the source
; `[filter:$ var:item{subfilter}]`
: evaluates the ''subfilter'' against each input title
:: sets the variable `item` to each input title in turn
:: retrieves the subfilter from a text-reference
:: returning all those input titles for which the ''subfilter'' returned output titles
; `[filter:$all input var:item<subfilter>]`
: evaluates the ''subfilter'' against each input title in turn
:: sets the variable `item` to each input title in turn
:: using __all input titles__ as the source
:: returning all input titles if for any the ''subfilter'' returned output titles