title: $:/TWaddle/WikiText to linkify title transclusion
created: 20150709222912683
creator: Mat
modified: 20150725143645798
modifier: Mat
recent: 15/07/10	
summary: Proposal for wikitext markup to linkify and transclude
tags: TWaddle  Syntax Proposal @JeremyRuston Major
source-wiki-id: TWaddle
source-tiddler-title-as-text: WikiText to linkify title transclusion
source-tiddler-title-as-link: WikiText%20to%20linkify%20title%20transclusion

This...

`<$list filter="[tag[foo]]">{{!!title}}</$list>`

...annoyingly doesn't wikify the resulting titles. Except for the CamelCased ones of course, making for a list that looks like a broken neon sign. 

So, you must put a link widget around the title transclusion. Pretty cumbersome... but it get's worse; as describd in [[Problem linkify CamelCased title]], it turns out that the CamelCased words make up their own links //inside// the full title link! To prevent this, you must first make it all a string before making it a link;

```
<$list filter="[tag[foo]]">
<$link to={{!!title}}><$view field="title" format="text">{{!!title}}</$view></$link>
</$list>
```

I propose a simple ~WikiText markup to wikify the inner part of this because it is just //so frequent//. So, I propose this as a new ~WikiText command:

:`[[!!title]]`

I think that's even so intuitive I think I must be missing something obvious.

And when you groan from getting that neon sign it will be very easy to just change the brackets!

My initial thinking for this was to treat/parse the whole `[[!!title]]` as one static unit... but how about treating only the initial `[[!!` as an identifier to linkify anything that follows, which is parsed as a transclusion, until the end marks `]]`. In other words, 

:`[[!!foobar]]`

would //transclude// and //linkify// the value in the foobar field.

Whoa!

I fear I must tag this not only as a Proposal but also as a Pie-in-the-Sky...

