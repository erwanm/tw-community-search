title: $:/cpashow/
act: # Either implement the proposed changes, or roll back the changes
# Write up the results
# Update training materials
# Update run sheets
check: # Study the charted data
# Determine if the changes resulted in improvements, deterioration, no change, or mixed results
# Prepare an analysis of the changes with recommendations on whether or not to keep the changes
original-tags: 
source-wiki-id: cpashow
source-tiddler-title-as-text: 
source-tiddler-title-as-link: 

created: 20160410190739397
do: Perform the following

# Execute the process including the proposed changes
# Produce outputs
# Collect data for charting and analysis in the following "CHECK" and "ACT" steps
modified: 20160410230128322
plan: Establish the following:

# Inputs
#* Define all of the external inputs upon which the team depends and which are not under the control of the team
#* Define how the inputs are measured
#* Define baseline measurements for the inputs
#* Define the completeness of the input measures
# Processes
#* Define the steps that make up the current process
#* Define proposed changes to improve the process
#* Define the completeness of the process specification
# Outputs
#* Define all of the outputs of the process 
#* Define how the outputs are measured
#* Define baseline measurements for the outputs
#* Define the completeness of the output measures
# Objectives
#* Define charting, inside and outside bounds, and directions for improvement for each output measure
#* Define targets for each output measure
#* Define the completeness of the specification 
#**By establishing output expectations, the completeness and accuracy of the spec is also a part of the targeted improvement. 

When possible start on a small scale to test possible effects.
stage: act
stages: plan do check act
tags: $:/tags/Macro
title: Process_Steps_Map

\define Process_Steps_Map(
	processTiddler:"PDCA", 
	stagesFieldName:"stages"
	stageFieldName:"stage"
)
	<!-- Print out a button plus arrow for each stage in the process -->
	<table><tr>
		<$list 
			filter="[list[$processTiddler$!!$stagesFieldName$]]"
			variable="curStage"
		>
			<td>
				<$button set="!!$stageFieldName$"
					setTo= <<curStage>>
				>
<!--					class="tc-btn-invisible" -->
					<<curStage>>
				</$button>
			</td>
		</$list>
	</tr><tr><td colspan="10">

		!{{$processTiddler$!!$stageFieldName$}}
		<$macrocall $name="View_Edit" 
			tiddlerName=<<currentTiddler>>
			fieldName={{$processTiddler$!!$stageFieldName$}}
			indexName=""
		 />
	</td></tr></table>
\end
`<$macrocall $name="Process_Steps_Map"
	processTiddler=<<currentTiddler>>
	stagesFieldName="stages"
	stagesFieldName="stage"
/>`

<$macrocall $name="Process_Steps_Map"
	processTiddler=<<currentTiddler>>
	stagesFieldName="stages"
	stageFieldName="stage"
/>
