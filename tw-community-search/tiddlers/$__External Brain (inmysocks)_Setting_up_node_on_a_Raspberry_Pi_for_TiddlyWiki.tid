title: $:/External Brain (inmysocks)/Setting up node on a Raspberry Pi for TiddlyWiki
created: 20150513231853182
modified: 20150514001143154
tags: [[External Brain (inmysocks)]]  Tutorials
source-wiki-id: External Brain (inmysocks)
source-tiddler-title-as-text: Setting up node on a Raspberry Pi for TiddlyWiki
source-tiddler-title-as-link: Setting%20up%20node%20on%20a%20Raspberry%20Pi%20for%20TiddlyWiki

!!Installing node (copied from [[here|https://learn.adafruit.com/node-embedded-development/installing-node-dot-js]])

Type the following commands (remember you can copy and past into the command line using `ctrl+c` to copy and `ctrl+shift+v` to paste):

```
curl -sLS https://apt.adafruit.com/add | sudo bash
sudo apt-get install node
```

This may take a few minutes. You can check if it worked by checking the version number:

```
node -v
```

which should say something like `v0.12.0` (the numbers may be different). 

!!Installing TiddlyWiki (copied from [[here|http://tiddlywiki.com/#GettingStarted%20-%20Node.js]]

After installing node, type:

```
sudo npm install -g tiddlywiki
```

This will once again take a few minutes. You can check to make sure it worked by typing:

```
tiddlywiki --version
```

You should get something like `5.1.8` as the result, this may take a while, it took over a minute on my Raspberry Pi 2 with the ~GitLab and syncthing daemons running.

Once that is done create a new wiki by typing:

```
tiddlywiki <wikiname> --init server
```

where you replace `<wikiname>` with the name of the wiki you want to create (this is different from the wiki title or subtitle, this determines the location where the wiki is stored). It will create a wiki called `<wikiname>` in `~/<wikiname>`. If that doesn't mean anything to you don't worry, it won't have any effect on what you do.

To start serving the wiki type:

```
tiddlywiki <wikiname> --server 9090 $:/core/save/all text/plain text/html "" "" 0.0.0.0
```

where you once again replace `<wikiname>` with the name of the wiki (the same one you used for the `tiddlywiki <wikiname> --init server` command).

This will once again take a minute. Nothing visible will happen for a bit then it will say `Serving on 0.0.0.0:9090` and after that you will see various other things as you use your wiki. The important part is `(press ctrl-C to exit)`, which means that if you want to stop the server when you are finished you should press `ctrl+c` on the command line and it will stop the server. If you look at the image below you can see what happens in a terminal when trying to serve on a port that is in use (in this case port 8080) and a successful start below that.

<<imageSlider [[Starting TiddlyWiki on a Raspberry Pi - Image]] "An example terminal starting a TiddyWiki server">>

Now, to use the tiddlywiki the Raspberry Pi is serving, open a browser and type the ip address of the pi followed by `:9090` in the address bar, so for mine I type in `192.168.0.36:9090`. This should bring up your wiki.

!!Some notes:

What each part of the command means:

|tiddlywiki |The command that you are using, you can't change this |
|`<wikiname>` |The name of the wiki that you are running the server for, you can have multiple wikis. |
|--server |The part that tells it that you want to start the server, you can't change this part. |
|`9090` |The port that it is served on, you can change this to some other values, not all will work. This is 9090 instead of the default 8080 because syncthing also defaults to using 8080 for its web interface and if you have both than trying to start the tiddlywiki server on 8080 will give you an error. You can change where syncthing has it's web interface, but it is easier to change here. |
|`$:/core/save/all` |The tiddler to serve at the root |
|`text/plain` | |
|`text/html` | |
|the first `""` | |
|the second `""` | |
|`0.0.0.0` |The ip address used. If you don't have this the wiki is only accessible through `127.0.0.1` on the machine running the server (in this case the pi, which you aren't on.). Setting this to `0.0.0.0` lets any ip address access it. |