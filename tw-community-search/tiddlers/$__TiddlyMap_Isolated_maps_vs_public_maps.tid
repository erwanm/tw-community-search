title: $:/TiddlyMap/Isolated maps vs public maps
created: 20150201132115819
modified: 20151106180106990
tmap.id: 04f1dd6d-79a9-4d6e-91be-b8322dd0d0be
type: text/vnd.tiddlywiki
tags: TiddlyMap  [[Use Cases]]
source-wiki-id: TiddlyMap
source-tiddler-title-as-text: Isolated maps vs public maps
source-tiddler-title-as-link: Isolated%20maps%20vs%20public%20maps

\rules except wikilink

{{$:/me/docs/outdated}}

In a classical mind- or concept-map program, you create isolated maps for different topics (see below: use case 2). However, because you are inside a wiki, it makes much sense that relationships and nodes you defined in one map, (partly) reappear in other maps as well (see below: use case 1). â€“ What if you want both? Some suggestions are found below:

! Use case 1 -- Global topic linking

''Purpose:'' Turning your wiki into a network of information

TiddlyMap can be used to express the overall structure of your information contained in your wiki. On a top level, you want to show how each tiddler is related to all the other tiddlers in your wiki. With TiddlyMap, you may globally link your pieces of information in your wiki, thus creating a big holistic network of linked tiddlers. 

Global linking is the default operating mode of TiddlyMap.

! Use case 2 -- Independent maps

''Purpose:'' To create (almost) isolated concept or mind maps

When creating concept or mind maps, you may want only a narrow set of edge-types and nodes to be displayed in the current view.

In this case it is best to [[prefix all edge types|Edge-type namespaces]] that you create with a certain namespace (domain). For example "family:mother of", "family:brother of" (Open the "Family tree" demo view for an example setup). Then change the edge filter to only include edges with that namespace. You can set the default prefix for edges created inside a certain view via the view configuration menu.

You can add nodes one by one to the view to ensure, only a subset of nodes is displayed in the graph. Alternatively, specify a dedicated tag for all nodes that should appear in the graph and change the node filter of the view accordingly.