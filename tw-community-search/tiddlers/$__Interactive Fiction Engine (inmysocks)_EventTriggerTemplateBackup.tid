title: $:/Interactive Fiction Engine (inmysocks)/EventTriggerTemplateBackup
created: 20141126150252398
modified: 20141126150304664
tags: 
source-wiki-id: Interactive Fiction Engine (inmysocks)
source-tiddler-title-as-text: EventTriggerTemplateBackup
source-tiddler-title-as-link: EventTriggerTemplateBackup

<!--
this is going to be the template that we can use for event triggers, it will need to have different things it can display based on the trigger type  for the moment just make it a button to test 

Triggering types we should have:

Button - a simple button that triggers the change, it can be located anywhere. Let the user define the text of the button and where it goes, the rest should be done by the authoring tool.
Combination lock (because we already use one in the game) - like the combination lock for the safe, the user defines the number of tumblers and the correct solution and the location.
player location - the trigger is dependent on the player location, the author just sets the location for this one
location of other item - the trigger is dependent on the location of some item in the game. The author sets the item and the location.

We need to have an option for persistent vs temporary triggers. Persistent triggers get changed once and stay that way, temporary triggers are only active when in the triggering state, and go inactive when that state changes.

You could have a hybrid sort of thing, press a button and the trigger is active, later press another button and the trigger goes inactive. This means that the user has to be able to set the location of both of the buttons/triggers.
-->

<!-- button type triggers -->
<$reveal type='match' state='!!trigger_type' text='button'>

<!-- permanent button trigger --> <!-- a permanent button trigger is a button that when pressed sets the trigger as active and it stays that way until the game is reset -->
<$reveal type='match' state='!!trigger_duration' text='permanent'>
<$button set='!!text' setTo='active'>{{!!button_text}}</$button> <!-- this sets the text field of the trigger template to 'active', use this to track them -->
</$reveal>
<!--end permanent button trigger -->

<!-- switch button trigger --> <!-- switch triggers can be switched between states by players actions, so one button that when pressed toggles the states -->
<$reveal type='match' state='!!trigger_duration' text='switch'>
<$reveal type='match' state='!!text' text='inactive'>
<$button set='!!text' setTo='active'>{{!!button_text}}</$button> <!-- switch in off state -->
</$reveal>
<$reveal type='match' state='!!text' text='active'>
<$button set='!!text' setTo='inactive'>{{!!button_text2}}</$button> <!-- switch in on state -->
</$reveal>
</$reveal>
<!-- end switch trigger -->

</$reveal>
<!-- end button type triggers -->

<!-- Item location triggers -->
<$reveal type='match' state='!!trigger_type' text='item_location'>

<!-- Permanent item based trigger - as soon as the item is in the correct location the event is set to active regardless of the items future location -->
<!-- I am not sure if I can do this or not -->
<$reveal type='match' state='!!trigger_duration' text='permanent'>

</$reveal>
<!-- end permanent item based switch>

<!-- switch item based trigger - the trigger is active only when the item is in the set location -->
<!-- so if the item location is the same as the trigger location than reveal the content -->
<$reveal type='match' state='!!trigger_duration' text='switch'>
<$set name='switchLocation' value={{!!location}}>
<$tiddler tiddler={{!!item}}>
<$reveal type='match' state='!!location' text=<<switchLocation>>>

</$reveal>
</$tiddler>
</$set>
</$reveal>
<!-- end switch item based trigger -->

</$reveal>
<!-- end item location triggers -->