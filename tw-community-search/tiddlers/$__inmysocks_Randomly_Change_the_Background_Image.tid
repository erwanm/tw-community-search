title: $:/inmysocks/Randomly Change the Background Image
blurb:  
created: 20150311164526712
modified: 20150312002842403
tags: [[inmysocks]]  [[Wiki Customization]]
source-wiki-id: inmysocks
source-tiddler-title-as-text: Randomly Change the Background Image
source-tiddler-title-as-link: Randomly%20Change%20the%20Background%20Image

Examples of this can be seen [[here|http://ooktech.com/jed/externalbrain/]] and [[here|http://ooktech.com/jed/ExampleWikis/StartupActions/]].

If you would like you can  just import the following tiddlers and ignore the rest:

*[[$:/data/Random Background URL List]]
*[[$:/plugins/inmysocks/randVal]]
*[[$:/plugins/inmysocks/MathyThing/action-storecount.js]]
*[[Random Background CSS]]
*The state tiddler will be created the first time you cilck the update button.
*If you want a button to change the background:
**[[Random Background Button]]
*If you want the background to change each time the wiki is loaded (''Will only work with version 5.1.8 and above''):
**[[$:/plugins/inmysocks/StartupActions]] - Note: this may become part of the core, if that happens you should delete this plugin when you upgrade your wiki.
**[[$:/scripts/Change Background on Startup]] - When you import this tiddler you need to give it the tag `$:/tags/StartupAction` in order for it to work.

!How to make your own

This requires a few things:

*A list of potential background image urls
*The [[randVal plugin|RandVal Plugin]]
*A state tiddler
*A css tiddler
*The [[action-storecount widget|MathyThing - action-storecount Widget]]. The action-storecount widget is part of the [[MathyThing Plugin]], but due to some problems with other widgets in that plugin it may be best to just import [[$:/plugins/inmysocks/MathyThing/action-storecount.js]] by itself.

What to do:

*Create a data tiddler that lists the picture urls. The example data tiddler for this is [[$:/data/Random Background URL List]].
*Create the css tiddler (it can have any name, but must be tagged with `$:/tags/Stylesheet` and must __NOT__ have the type set to text/css, just leave the type field empty or the transclusion won't work.
**<div>

```
html body.tc-body { background: url({{$:/state/Random Background}}) no-repeat center center fixed; background-size: cover; height: 100%;}
```
</div>
*''If you want a button'' - Create the update button, you can transclude the tiddler with the button in it anywhere and clicking on the button will update the background. You can also change the button text or css class. Button code:
**<div>

```
<$list filter='[[$:/data/Random Background URL List]indexes[]nth{$:/state/Random Background!!number}]' variable=ThisIndex>
<$button class='tc-btn-invisible' tooltip='Change Background Image'>Change Background
<$action-storecount $filter='[[$:/data/Random Background URL List]indexes[]]' $tiddler='$:/state/Random Background' $field='total_num'/>
<$action-randval $tiddler='$:/state/Random Background' $field='number' $lower=1 $upper={{$:/state/Random Background!!total_num}} $step=1 $numrolls=1/>
<$action-setfield $tiddler='$:/state/Random Background' $field=text $value=<<ThisIndex>>/>
</$button>
</$list>
```
</div>
**Then when that button is pressed the url listed in `$:/state/Random Background` is updated to a random entry from [[$:/data/Random Background URL List]]
*''If you want the background to change everytime the wiki is loaded'' (this may only work in version 5.1.8 and up, I need to test it some more.)
**Import the startup actions plugin: [[$:/plugins/inmysocks/StartupActions]]
**Create a tiddler tagged with `$:/tags/StartupAction` with the following code in the text field:<div>

```
<$list filter='[[$:/data/Random Background URL List]indexes[]nth{$:/state/Random Background!!number}]' variable=ThisIndex>
<$action-storecount $filter='[[$:/data/Random Background URL List]indexes[]]' $tiddler='$:/state/Random Background' $field='total_num'/>
<$action-randval $tiddler='$:/state/Random Background' $field='number' $lower=1 $upper={{$:/state/Random Background!!total_num}} $step=1 $numrolls=1/>
<$action-setfield $tiddler='$:/state/Random Background' $field=text $value=<<ThisIndex>>/>
</$list>
```
</div>


<<bottomOfTiddler>>