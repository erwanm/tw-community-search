title: $:/inmysocks/Thoughts about TiddlyWiki and Licensing
created: 20150721171600379
modified: 20150723004431109
original-tags: 
source-wiki-id: inmysocks
source-tiddler-title-as-text: Thoughts about TiddlyWiki and Licensing
source-tiddler-title-as-link: Thoughts%20about%20TiddlyWiki%20and%20Licensing

So after some surprisingly patient explanations from people in the google group in [[this thread|https://groups.google.com/forum/#!topic/tiddlywiki/Itt-_P-k-Og]] it turns out that while some of the problems listed here exist they aren't nearly as important as I thought. All that is required is some explanation of what is from the core tiddlywiki, what is from plugins and what is wiki content. There are still some fuzzy areas but that will only be a problem if there are plugins with non-BSD-style licenses that limit the use of modified code.

---

As a single page application used for content creation and distribution TiddlyWiki fits into an area that isn't explicitly addressed by any of the software licenses I have seen. The content of tiddlers should, in my opinion, be considered separate from the tiddlywiki core, and plugins should be considered separate entities from either the content of the wiki or the core itself. Unfortunately while this sounds nice in theory, in practice it raises questions without obvious answers.

Unlink other content creation tools, like photoshop or any of the various word processors, the content created by the user and the program itself are distinct entities but for tiddlywiki, because everything is a tiddler, user created content is contained in a single html file (unless it is run under node), the distinction between wiki content, plugins, and the core is hard do define in a precise way because of the many possible edge cases. If you use a plugin and then overwrite one of the shadow tiddlers in the plugin does the overwritten tiddler become part of the wiki content or is it still part of the plugin? The same applies to the core. It seems obvious that if you are changing the settings used by a plugin and the settings are stored in a shadow tiddler than the overwritten tiddler containing these settings is still part of the plugin, but in the case of the core it doesn't make sense for the content of the tiddlers $:/SiteTitle and $:/SiteSubtitle to be considered part of the core as opposed to wiki content.

This may be able to be resolved in a similar way as the linking exemption allowed under some forms of the GPL for software libraries, but there are people that argue about the validity of those exemptions and they have a much more clearly defined separation between the components with a GPL license and those without.

We might be able to say that plugins (including the core), defined as the collection of unmodified shadow tiddlers, are each distinct entities as far as licensing is concerned and make sure to include a clause in the licenses used that handles the cases where these shadow tiddlers are modified. How this is going to be distinct from a derivative work I don't know. Maybe any modifications to the shadow tiddlers that doesn't alter the fundamental use of the plugin, like changing settings tiddlers, can fit under one clause and derivative works can be defined as repacking the plugin with changes. Or possibly any changes that are made using tools supplied by the plugin itself are in one category and changes that require manually editing are another case.
Then any other tiddlers are considered wiki content and can be handled by a separate license.

So each plugin would be able to have its own license, where the plugin license handles the case of modified shadow tiddlers, and wiki content can have it's own license.

This still leaves some holes, like the situation where a non-shadow tiddler can modify the behavior of a plugin using things like css. Or if a plugin uses the `$:/RawMarkup` tag does the html generated by it fall under the plugin license or the TiddlyWiki license?

While these problems are probably not going to be a big deal for the code side of TiddlyWiki as currently it looks like most people creating code for TiddlyWiki want the code to be free, this may become a problem when people start using TiddlyWiki to create content that they then sell or use commercially in some other way.