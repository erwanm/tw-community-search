title: $:/TWHangouts/HangOut_010
created: 20150119003200539
modified: 20150119003250338
tags:  http://hangouts.tiddlyspace.com/ License
source-wiki-id: TWHangouts
source-tiddler-title-as-text: HangOut_010
source-tiddler-title-as-link: HangOut_010

2013-08-27 - [[YouTube|http://www.youtube.com/watch?v=o70TtNIe-L4]]

"""
0:00:00 Attendees: Craig Prichard, Jeremy Ruston, (later: Marc -from Swizerland), Mario Pietsch, Scott Simmons, Simon Harper, Leo Azimov, Tobias Beer
0:02:30 Jeremy - dev issues - Agenda (... We did one point :))
0:07:30 Jeremy - opens the source code .. directory structure
0:08:42 boot - folder
0:09:05 core - folder
0:09:24 Leo - core is a plugin by intention?
0:11:35 editions - folder
0:12:03 plugins - folder
0:12:22 themes - folder
0:12:43 tmp - folder
0:12:58 files in TW5 "root"
0:13:45 Leo - Content of the wiki is inside editions?
0:14:04 editions/tw5.com
0:14:35 editions/clientserver

0:15:08 Leo - there is an other plugins directory in clientserver?!
0:17:07 Mario - and the tiddlers folder is just the content for this edition?
0:17:42 Mario - the system directory is just an other namespace?
0:18:30 ... general discussion about tiddler filenames and titles
0:20:40 Leo/Jeremy - file name creation and url encoded filenames

0:23:52 editions/d3demo
0:24:04 editions/empty
0:24:26 editions/tahoelafs ... tahoe-lafs (dot) org
0:26:06 editions/test

0:26:20 Tobi - Are the editions accessible on the web

0:27:18 editions/test
0:28:52 editions/tw2
0:29:37 editions/tw5.com
0:29:47 editions/tw5tiddlyweb
+- 0:30:17 mario - is there the latest version at TiddlySpace?

0:31:14 plugins/
0:31:22 plugins/d3 and /codemirror - exploring how to include external libraries
0:31:55 plugins/classictools - tools for dealing with TWclassic
0:32:03 plugins/filesystem - used on the server to sync changes to the store
0:32:20 plugins/fullscreen
0:32:34 plugins/jasmine - test suite
0:32:47 plugins/tahoelfs - good example plugin, because it's "small"
0:33:04 plugins/tiddlyweb - clientside plugin to save on tiddlyweb

0:33:32 themes/ - plugins can have "dependencies" defined in the "plugin.info" file

0:34:14 /*.sh batch files
0:34:50 /package.json

0:35:09 Mario - should it be possibel to say: "npm install .. tiddlywiki"? what will you get?

0:37:02 /tiddlywiki.js
0:37:40 /bld.sh - builds the whole TW5 stuff.
+- 0:38:15 Jeremy/all - about the "static" TW5 representation. The static files use relative links.

0:46:38 Jeremy - how static files are created using the templates

0:51:10 back at /bld.sh - short summary
0:51:30 /bld.sh - how to generate the encrypted TW5

0:51:44 Tobi - questions about the "edit / deployment" possibilities
+- 0:53:30 Jeremy runs the local server to edit tiddlers. Shows his workflow

0:58:30 /core
0:58:30 /boot

0:59:12 Mario - If you want to learn about plugins. Where do you start?
+- 1:00:10 Jeremy - quote: "plugins is a mechanism to deliver shadow tiddlers"

1:00:33 /core - is a plugin
1:00:40 /boot - is needed to start the core
1:00:57 /boot/sjcl.js - encryption library
1:01:10 /boot/boot.css.tid - basic styling needed to decrypt TW5

1:01:51 Leo - What kind of encryption is used?

1:03:35 /boot/bootprefix.js
1:04:33 /boot/boot.js
+- 1:04:33 connection between the code and the html file

1:05:53 Leo - What would be your recomendation for stepping through the code?
+- 1:06:23 Jeremy - quote: "The ordering I'm showing you, is the ordering I'm suggesting, reading things"

1:09:09 Mario - boot.js contains code to boot nodejs and to boot the browser?
1:10:17 Mario - index.html where is the "program init() / main()" type of function?
1:13:00 Leo - "The challange is to debug the node code!?"

1:14:30 Jeremy - /boot/boot.js - how the boot process actually starts. Has been main() in TWc.

1:17:30 /core/startup.js - "The inner loop of TW5"

1:18:30 short break -
1:19:06 Mario - "Leo, why do you want to debug the node stuff?"
1:23:09 Tobi/Jeremy - "How would you debug your node scripts .. renderTiddler?"
1:24:30 Jeremy - short summary.
1:24:54 Leo - Good starting point to learn about plugins?
1:25:43 Leo - If I want to write a MathJax plugin?

1:27:40 /core - folder
1:27:52 /core/plugin.info
1:28:02 /core/docs/* - internal docs - english
1:28:38 /core/images - used in the UI
1:29:00 /core/messages
1:29:18 /core/modules
1:29:23 /core/templates - tiddlers of a "technical nature" used as templates.
1:30:28 /core/ui - "kind of user interface decisions"
1:30:50 /core/wiki - "tiddlers needed for the operation of the wiki

1:31:50 /core/modules - info about conventions in the dir
1:32:18 /core/modules/wiki.js - the "hart of TW" -
1:33:40 /core/modules/widgets
1:34:20 /core/modules/wiki.js - detailed info
+- 1:35:25 /core/modules/startup.js
+- 1:36:38 Tobi - Where does this "exports" come from?
+- 1:37:25 Jeremy - TW5 contains its own implementation of commonJs to "require a tiddler title"

1:38:19 /core/modules/tiddler.js
1:38:37 /core/modules/themes.js
1:38:39 /core/modules/syncer.js
1:39:20 /core/modules/hacks.js
1:39:40 /core/modules/filters.js
1:40:00 /core/modules/deserializers.js
1:40:38 /core/modules/config.js - constants - language ...

1:41:27 Mario - Question about internationalisation?

1:43:20 Mario - idea about languag switching
1:43:20+ Jeremy - The tiddler content should be switchable too
1:45:15 Leo - Is it possible to see both (language content tiddlers) at the same time?
1:46:59 Scott - ... So User created content can be switched?
1:47:43 Tobi - wants to have a "flat file (tiddler)" for translation
1:49:22 Jeremy - back to config.js

1:49:32 /core/modules/commander.js - command line commands
1:49:32+ /core/modules/commands - folder
1:50:16 /core/modules/filters - folder
1:51:55 /core/modules/parsers - folder
1:53:09 /core/modules/rendertree - folder
1:54:10 /core/modules/savers - folder
1:54:49 /core/modules/utils - folder
1:56:31 - - that's it :) - -

1:56:48 Mario - what's the "module-type" used for?
1:58:55 - Small talk
1:59:50 Jeremy - Any questions?
2:00:00 Leo - Is it possible to trace the execution?
2:02:32 Mario - Leo, which browser do you use? FF + Firebug
2:04:30 Jeremy - back to the agenda.
2:04:45 Jeremy/all - TiddlyLink formatting ...
2:12:12 Bye! Bye!