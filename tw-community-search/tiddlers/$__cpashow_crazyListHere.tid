title: $:/cpashow/crazyListHere
created: 20160416162155176
creator: Chuck Paussa
field: currentprocess
modified: 20160420194955855
modifier: Chuck Paussa
process: [[Make a wish]]
slides: [[Build out the message hierarchy]]
tiddler: $:/temp/fieldItems
value: 
original-tags: object edit $:/tags/Macro
source-wiki-id: cpashow
source-tiddler-title-as-text: crazyListHere
source-tiddler-title-as-link: crazyListHere

\define selectItemsNotHere(fieldName, tagName)
<!-- selectItemsNotHere($fieldName$, $tagName$) -->
	<!-- Select all of the global values tagged with this field -values in this field -->
	<$select tiddler="$:/temp/fieldItems" field="current$fieldName$">
		<option value=""> -- </option>
		<!-- Filter: Tagged with tagName = "[tag[$tagName$]]" -->
		<!-- Filter: listed in fieldname = "[getfieldlist[$fieldName$]]" -->
		<!-- Filter: Listed in field = "[list[!!$fieldName$]]" -->
		<!-- Filter: Tagged with fieldname but not in field = "[tag[$tagName$]] -[list[!!$fieldName$]]" -->
		<!-- Filter: Tagged with fieldname or listed in field but not in field = "[tag[$tagName$]] [getfieldlist[$fieldName$]] -[list[!!$fieldName$]]" -->
		<$list filter="[tag[$tagName$]] [getfieldlist[$fieldName$]] -[list[!!$fieldName$]]" variable="curItem">
			<option value=<<curItem>> ><<curItem>></option>
		</$list>
	</$select>
\end

\define selectItemsHere(fieldName)
<!-- selectItemsHere($fieldName$) -->
	<!-- Select all of the values in this field -->
	<$select tiddler="$:/temp/fieldItems" field="current$fieldName$">
		<option value=""> -- </option>
		<!-- Filter: Listed in field = "[list[!!$fieldName$]]" -->
		<$list filter="[list[!!$fieldName$]]" variable="curItem">
			<option value=<<curItem>> ><<curItem>></option>
		</$list>
	</$select>
\end

\define comboItemSelect(fieldName, tagName)

	<$reveal 
		state="$:/state/comboSelect##$fieldName$"
		type="match"
		text="edit"
		default="edit"
	>
		<$button set="$:/state/comboSelect##$fieldName$"
			setTo="import"
			tooltip="Select from existing $fieldName$s"
		>
			{{Import.svg}}
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="" />
		</$button>
		<!-- Un comment this if you want to display this button -->
		<!-- 
		<$button set="$:/state/comboSelect##$fieldName$"
			setTo="select"
			tooltip="Select $fieldName$ from this tiddler"
		>
			{{$:/core/images/down-arrow}}
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="" />
		</$button>
		-->
		<<editCurrentFieldName "$fieldName$">>
		<<addItemIfNotPresent "$fieldName$" >>
	</$reveal>
	<$reveal 
		state="$:/state/comboSelect##$fieldName$"
		type="match"
		text="import"
		default="edit"
	>
		<$button set="$:/state/comboSelect##$fieldName$"
			setTo="edit"
			tooltip="Create a new $fieldName$"
		>
			{{$:/core/images/edit-button}}
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="" />
		</$button>
		<!-- Un comment this if you want to display this button -->
		<!-- 
		<$button set="$:/state/comboSelect##$fieldName$"
			setTo="select"
			tooltip="Select $fieldName$ from this tiddler"
		>
			{{$:/core/images/down-arrow}}
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="" />
		</$button>
		-->
		<<selectItemsNotHere "$fieldName$" "$tagName$">>
		<<addItemIfNotPresent "$fieldName$" >>
	</$reveal>
	<$reveal 
		state="$:/state/comboSelect##$fieldName$"
		type="match"
		text="select"
		default="edit"
	>
		<<selectItemsHere "$fieldName$">>
	</$reveal>
\end

\define editCurrentFieldName(fieldName)
<!-- editCurrentFieldName($fieldName$) -->
	<!-- Display an edit box for the selected value -->
	<!-- Use a $:/temp tiddler so that it is invisible on the recent list -->
	<!-- Use a $:/temp tiddler so it doesn't get exported on upgrade -->
	<$edit-text 
		placeholder="Type a new item name" 
		tag="input"
		tiddler="$:/temp/fieldItems" 
		field="current$fieldName$" 
	/>
\end

\define addItemIfNotPresent(fieldName)
<!-- addItemIfNotPresent($fieldName$) -->
	<!-- Display an add button if the value isn't already present in the field's list -->
	<!-- Filter: Currently edited item = "[[$:/temp/fieldItems]get[current$fieldName$]]" -->
	<!-- Filter: Listed in field = "[list[!!$fieldName$]]" -->
	<!-- Filter: Is item not present in field? = "[[$:/temp/fieldItems]get[current$fieldName$]] -[list[!!$fieldName$]]" -->
	<$list filter="[[$:/temp/fieldItems]get[current$fieldName$]] -[list[!!$fieldName$]]" variable="curItem">
		<$button tooltip=<<curItem>> >
			{{$:/core/images/new-button}}
			<!-- Trim the value and enclose it in square brackets so its a list item -->
			<$macrocall $name="actionAddItem" fieldName="$fieldName$" itemName=<<curItem>> />
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="" />
		</$button>
	</$list>
\end

\define actionAddItem(fieldName, itemName)
<!-- actionAddItem($fieldName$, $itemName$) -->
	<!-- Trim the value -->
	<$macrocall $name="actionAddItem_Internal" 
		fieldName="$fieldName$" 
		itemName=<<calcString "$itemName$" "trim">> 
	/>
\end

\define actionAddItem_Internal(fieldName, itemName)
<!-- actionAddItem_Internal($fieldName$, $itemName$) -->
	<!-- Add the item to the field list -->
	<$action-listops $field="$fieldName$" $subfilter="[[$itemName$]]" />
	<!-- Set the input field to be the trimmed value -->
	<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$fieldName$" $value="$itemName$" />
\end

\define deleteItemButton(itemName, fieldName)
	<$list filter="[[$itemName$]] -[list[!!$fieldName$]]"
		emptyMessage="""
	<$button class="tc-btn-invisible" tooltip="Delete $itemName$ from $fieldName$ List">
		{{$:/core/images/delete-button}}
		<$action-listops $field="$fieldName$" $subfilter="-[[$itemName$]]" />
	</$button>
	""">
	</$list>
\end

\define displayItemName(itemName)
<!-- displayItemName($itemName$) -->
	<$list filter="[[$itemName$]is[tiddler]] " variable="exists" emptyMessage="""
		$itemName$
	""">
		[[$itemName$]]
	</$list>
\end

\define uncompleteTiddler(tiddlerName, itemName, fieldName, tagName)
<!-- uncompleteTiddler($tiddlerName$, $itemName$, $fieldName$) -->
	<!-- show the button if the item both exists and is in the completed list -->
	<$list filter="[[$itemName$]is[tiddler]]" variable="istiddler">
		<$list filter="[[$itemName$]] -[list[Completed_Items##$tiddlerName$]]" variable="exists" emptyMessage="""
		<$button class="tc-btn-invisible" tooltip="Mark $itemName$ as active in the context of $tiddlerName$">
			{{$:/core/images/refresh-button}}
			<!-- add $itemName$ to the list in index $tiddlerName$ -->
			<$action-listops $tiddler="Completed_Items" $index="$tiddlerName$" $subfilter="-[[$itemName$]]" />
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="[[$tagName$]]" />
		</$button>
	""">
	</$list>
\end

\define completeTiddler(tiddlerName, itemName, fieldName, tagName)
<!-- completeTiddler($tiddlerName$, $itemName$, $fieldName$) -->
	<!-- show the button if the item both exists and is not in the completed list -->
	<$list filter="[[$itemName$]is[tiddler]] -[list[Completed_Items##$tiddlerName$]]" variable="exists" >
		<$button class="tc-btn-invisible" tooltip="Mark $itemName$ as complete in the context of $tiddlerName$">
			{{$:/core/images/done-button}}
			<!-- add $itemName$ to the list in index $tiddlerName$ -->
			<$action-listops $tiddler="Completed_Items" $index="$tiddlerName$" $subfilter="[[$itemName$]]" />
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="[[$tagName$]]" />
		</$button>
	</$list>
\end

\define todoTiddler(tiddlerName, itemName, fieldName, tagName)
<!-- todoTiddler($tiddlerName$, $itemName$, $fieldName$) -->
	<!-- show the button if the item both exists and is not done -->
	<$list filter="[[$itemName$]is[tiddler]] -[tag[Done]]" variable="exists" >
		<$button class="tc-btn-invisible" tooltip="Mark $itemName$ as Done Globally">
			{{$:/core/images/done-button}}
			<!-- add $itemName$ to the list in index $tiddlerName$ -->
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="[[Done]]" />
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="[[$tagName$]]" />
		</$button>
	</$list>
\end

\define doneTiddler(tiddlerName, itemName, fieldName, tagName)
<!-- doneTiddler($tiddlerName$, $itemName$, $fieldName$) -->
	<!-- show the button if the item both exists and is done -->
	<$list filter="[[$itemName$]is[tiddler]] -[!tag[Done]]" variable="exists" >
		<$button class="tc-btn-invisible" tooltip="Mark $itemName$ as Active Globally">
			{{$:/core/images/refresh-button}}
			<!-- add $itemName$ to the list in index $tiddlerName$ -->
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="-[[Done]]" />
			<$action-listops $tiddler="$itemName$" $field="tags" $subfilter="[[$tagName$]]" />
		</$button>
	</$list>
\end

\define createTiddlerType(tiddlerName, tagName)
<!-- createTiddlerType($tiddlerName$, $tagName$) -->
	<$list filter="[[$tiddlerName$]!is[tiddler]]" variable="exists" >
		<$button class="tc-btn-invisible" tooltip="Create $tiddlerName$ as a tiddler">
			{{$:/core/images/new-button}}
			<$action-listops $tiddler="$tiddlerName$" $field="tags" $subfilter="[[$tagName$]]" />
			<$action-setfield $tiddler="$:/temp/fieldItems" $field="current$tagName$" $value="" />
		</$button>
	</$list>
\end

\define displayItemManager(tiddlerName, itemName, fieldName, tagName)
	<style>
		.displayItemManager .hideme {opacity:0.0; transition: opacity 1.0s; }
		.displayItemManager:hover .hideme {opacity:1.0; transition: opacity 0.5s; }
	</style>
	<span class="displayItemManager">
		<span class="hideme">
			<!-- Display a delete button -->
			<$macrocall $name="deleteItemButton" 
				itemName="$itemName$" 
				fieldName="$fieldName$" 
			/>
		</span>
		<!-- Display the item name -->
		<$macrocall $name="displayItemName" itemName="$itemName$" />
		<span class="hideme">
			<!-- If the item doesn't exist as a Tiddler, display a button to create it -->
			<$macrocall $name="createTiddlerType" 
				tiddlerName="$itemName$" 
				tagName="$tagName$" 
			/>
			<!-- If the item exists not completed, display a button to complete it -->
			<$macrocall $name="completeTiddler" 
				tiddlerName="$tiddlerName$" 
				itemName="$itemName$" 
				fieldName="$fieldName$" 
				tagName="$tagName$" 
			/>
			<!-- If the item is completed, display a button to uncomplete it -->
			<$macrocall $name="uncompleteTiddler" 
				tiddlerName="$tiddlerName$" 
				itemName="$itemName$" 
				fieldName="$fieldName$" 
				tagName="$tagName$" 
			/>
			<!-- If the item exists not done, display a button to Done it -->
			<$macrocall $name="todoTiddler" 
				tiddlerName="$tiddlerName$" 
				itemName="$itemName$" 
				fieldName="$fieldName$" 
				tagName="$tagName$" 
			/>
			<!-- If the item is Done, display a button to unDo it -->
			<$macrocall $name="doneTiddler" 
				tiddlerName="$tiddlerName$" 
				itemName="$itemName$" 
				fieldName="$fieldName$" 
				tagName="$tagName$" 
			/>
			<!-- Move item buttons -->
			<$macrocall $name="moveItemTop" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				indexName=""  
				itemName="$itemName$"
			/>
			<$macrocall $name="moveItemUp" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				indexName=""  
				itemName="$itemName$"
			/>
			<$macrocall $name="moveItemDown" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				indexName=""  
				itemName="$itemName$"
			/>
			<$macrocall $name="moveItemBottom" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				indexName=""  
				itemName="$itemName$"
			/>
			<$macrocall $name="displayFieldEditor" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				itemName="$itemName$" 
				tagName="$tagName$" 
			/>
		</span>
	</span>
\end

\define moveItemTop(tiddlerName, itemName, fieldName, tagName)
	<!-- Only show move to top if item is 2+ down -->
	<$list filter="[list[$tiddlerName$!!$fieldName$]rest[]before[$itemName$]]" variable="temp">
		<$button class="tc-btn-invisible" tooltip="Move $itemName$ to top of list">
			{{$:/core/images/chevron-up}}
			<$macrocall $name="prependListItem" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				indexName=""  
				itemName="$itemName$"
			/>
		</$button> 
	</$list>
\end

\define moveItemUp(tiddlerName, itemName, fieldName, tagName)
	<!-- Only show move up if item is not at top -->
	<$list filter="[list[$tiddlerName$!!$fieldName$]before[$itemName$]]" variable="temp">
		<$button class="tc-btn-invisible" tooltip="Move $itemName$ up in list">
			{{$:/core/images/up-arrow}}
			<$macrocall $name="moveListItem" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				itemName="$itemName$" 
				moveNum="-1" 
			/>
		</$button>
	</$list>
\end

\define moveItemDown(tiddlerName, itemName, fieldName, tagName)
	<!-- Only show move down if item is not at bottom -->
	<$list filter="[list[$tiddlerName$!!$fieldName$]after[$itemName$]]" variable="temp">
		<$button class="tc-btn-invisible" tooltip="Move $itemName$ down in list">
			{{$:/core/images/down-arrow}}
			<$macrocall $name="moveListItem" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				itemName="$itemName$" 
				moveNum="1" 
			/>
		</$button>
	</$list>
\end

\define moveItemBottom(tiddlerName, itemName, fieldName, tagName)
	<!-- Only show move to bottom if item is 2+ up -->
	<$list filter="[list[$tiddlerName$!!$fieldName$]butlast[]after[$itemName$]]" variable="temp">
		<$button class="tc-btn-invisible" tooltip="Move $itemName$ to bottom of list">
			{{$:/core/images/chevron-down}}
			<$macrocall $name="appendListItem" 
				tiddlerName="$tiddlerName$" 
				fieldName="$fieldName$" 
				itemName="$itemName$" 
			/>
		</$button> 
	</$list>
\end

\define displayFieldEditor(tiddlerName, itemName, fieldName, tagName)
	<$list filter="[[$itemName$]is[tiddler]]" variable="isTiddler">
		<$list filter="[[$tagName$]is[tiddler]]" variable="isTiddler">
			<!-- edit item button -->
			<$macrocall $name="Slide_Macro" macro=
			"""
				<ul><li>
				<$tiddler tiddler="$itemName$"  >
					<$transclude tiddler="$tagName$" />
				</$tiddler>
				</li></ul>
			"""
				tooltip="Display $itemName$" 
				state="$:/state/Slide_Macro/$tiddlerName$-$itemName$-$fieldName$-$tagName$"
				hiddenIcon="$:/core/images/chevron-right"
				shownIcon="$:/core/images/chevron-down"
			/>
		</$list>
	</$list>
\end

\define crazyListHere(fieldName, tagName)

	<$macrocall $name="comboItemSelect" fieldName="$fieldName$" tagName="$tagName$" />
	<ul>
		<$list filter="[list[!!$fieldName$]]" variable="itemName">
			<li>
				<$macrocall $name="displayItemManager" tiddlerName=<<currentTiddler>> itemName=<<itemName>> fieldName="$fieldName$" tagName="$tagName$" />
			</li>
		</$list>
	</ul>
\end

\define moveListItem(tiddlerName, fieldName, indexName, itemName, moveNum)
	<!-- moveListItem($tiddlerName$, $fieldName$, $indexName$, $itemName$, $moveNum$) -->
	<$list filter="$indexName$" variable="isIndex">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$index="$indexName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]] +[move:$moveNum$[$itemName$]]"
		/>
	</$list>
	<$list filter="$fieldName$" variable="isField">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$field="$fieldName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]] +[move:$moveNum$[$itemName$]]"
		/>
	</$list>
\end

\define appendListItem(tiddlerName, fieldName, indexName, itemName)
	<!-- appendListItem($tiddlerName$, $fieldName$, $indexName$, $itemName$) -->
	<$list filter="$indexName$" variable="isIndex">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$index="$indexName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]move:1000[$itemName$]]"
		/>
	</$list>
	<$list filter="$fieldName$" variable="isField">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$field="$fieldName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]move:1000[$itemName$]]"
		/>
	</$list>
\end

\define prependListItem(tiddlerName, fieldName, indexName, itemName)
	<!-- prependListItem($tiddlerName$, $fieldName$, $indexName$, $itemName$) -->
	<$list filter="$indexName$" variable="isIndex">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$index="$indexName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]move:-1000[$itemName$]]"
		/>
	</$list>
	<$list filter="$fieldName$" variable="isField">
		<$action-listops 
			$tiddler="$tiddlerName$" 
			$field="$fieldName$" 
			$filter="[list[$tiddlerName$!!$fieldName$]move:-1000[$itemName$]]"
		/>
	</$list>
\end

\define breakerline()--------------------------------------------------------


Depends on the following:

* Requires TiddlyWiki version 5.1.11 +
** Needed for the listops operators
* [[$:/_cpa/macros/calcString.js]] 
** trims entered text so tiddler names don't have leading and trailing spaces
* [[$:/_cpa/macros/mytabs]]
** The goofy tabbed interface in crazyListHere
* [[Import.svg]]
** Import button Image so the import button in comboItemSelect isn't empty
* [[$:/_cpa/modules/filters/getfieldlist.js]]
** Returns unique values found in a field

<table style="width:100%"><tr>
	<th style="width:30%">Macro</th>
	<th style="width:30%">Description</th>
	<th>Results</th>
</tr><tr>
	<td>
		`<$macrocall $name="selectItemsNotHere" fieldName="process" tagName="process" />`
	</td><td>
		Generates a select drop down filled with all tiddlers tagged with fieldName and not in fieldname in this tiddler
	</td><td>
		<$macrocall $name="selectItemsNotHere" fieldName="process" tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="selectItemsHere" fieldName="process"/>`
	</td><td>
		Generates a select drop down filled tiddlers in fieldname in this tiddler
	</td><td>
		<$macrocall $name="selectItemsHere" fieldName="process"/>
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="comboItemSelect" fieldName="process" tagName="process" />`
	</td><td>
		Generates a combo edit / select widget allowing you to import, edit, or select items into this tiddler. (Currently select is commented out)
	</td><td>
		<$macrocall $name="comboItemSelect" fieldName="process" tagName="process"/>
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="editCurrentFieldName" fieldName="process"/>`
	</td><td>
		Displays an edit field to edit the name of the current tiddler
	</td><td>
		<$macrocall $name="editCurrentFieldName" fieldName="process"/>
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="addItemIfNotPresent" fieldName="process"/>`
	</td><td>
		Displays an Add button (If current Tiddler is not in fieldname) That will add current Tiddler to the fieldname list
	</td><td>
		<$macrocall $name="addItemIfNotPresent" fieldName="process"/>
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="deleteItemButton" itemName={{$:/temp/fieldItems!!currentprocess}} fieldName="process" />`
	</td><td>
		Displays a delete button (If current Tiddler is in fieldname) to delete this row's Tiddler from the fieldname list
	</td><td>
		<$macrocall $name="deleteItemButton" itemName={{$:/temp/fieldItems!!currentprocess}} fieldName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="displayItemName" itemName={{$:/temp/fieldItems!!currentprocess}} />`
	</td><td>
		Displays the item name. Displays as a link to the item if the item exists as a tiddler
	</td><td>
		<$macrocall $name="displayItemName" itemName={{$:/temp/fieldItems!!currentprocess}} />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="createTiddlerType" tiddlerName={{$:/temp/fieldItems!!currentprocess}}  tagName="process" />`
	</td><td>
		Creates the Tiddler and tags it with the fieldname
	</td><td>
		<$macrocall $name="createTiddlerType" tiddlerName={{$:/temp/fieldItems!!currentprocess}}  tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="uncompleteTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process"/>`
	</td><td>
		Marks the given item as incomplete in this tiddler
	</td><td>
		<$macrocall $name="uncompleteTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="completeTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />`
	</td><td>
		Marks the given item as complete in this tiddler
	</td><td>
		<$macrocall $name="completeTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="todoTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />`
	</td><td>
		Marks the given item as Done globally
	</td><td>
		<$macrocall $name="todoTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="doneTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />`
	</td><td>
		Marks the given item as not Done globally
	</td><td>
		<$macrocall $name="doneTiddler" tiddlerName=<<currentTiddler>> itemName={{$:/temp/fieldItems!!currentprocess}}  fieldName="process" tagName="process" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="moveItemTop" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />`
	</td><td>
		Moves an item to the top of the list.
	</td><td>
		<$macrocall $name="moveItemTop" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="moveItemUp" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />`
	</td><td>
		Moves an item up in the list.
	</td><td>
		<$macrocall $name="moveItemUp" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="moveItemDown" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />`
	</td><td>
		Moves an item down in the list.
	</td><td>
		<$macrocall $name="moveItemDown" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="moveItemBottom" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />`
	</td><td>
		Moves an item to the bottom of the list.
	</td><td>
		<$macrocall $name="moveItemBottom" tiddlerName=<<currentTiddler>> fieldName="process" indexName=""  itemName="test" />
	</td>
</tr><tr>
	<td>
		`<$macrocall $name="displayItemManager" tiddlerName=<<currentTiddler>> fieldName="process" itemName="test" />`
	</td><td>
		Displays one item with controls Edit this macro to change the list of controls.
	</td><td>
		<$macrocall $name="displayItemManager" tiddlerName=<<currentTiddler>> fieldName="process" itemName="test" />
	</td>
</tr><tr>
	<td>
		`<<crazyListHere "process" "process">>`
	</td><td>
		Displays the list. Edit this macro to change how the list is displayed.
	</td><td>
		<<crazyListHere "process" "process">>
	</td>
</tr></table>
